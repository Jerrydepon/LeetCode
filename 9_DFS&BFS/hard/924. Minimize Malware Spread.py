class Solution(object):
    def minMalwareSpread(self, graph, initial):
        """
        :type graph: List[List[int]]
        :type initial: List[int]
        :rtype: int
        """
        # test case:
        """
        [[1,1,0,1,0,0,0,0],[1,1,0,0,1,0,0,0],[0,0,1,0,0,1,0,1],[1,0,0,1,0,0,1,0],[0,1,0,0,1,0,1,0],[0,0,1,0,0,1,0,1],[0,0,0,1,1,0,1,0],[0,0,1,0,0,1,0,1]]
[1,3,5]
"""
        def dfs(visited, node):
            for n in range(len(graph[node])):
                if graph[node][n] == 1 and n not in visited:
                    visited.add(n)
                    dfs(visited, n)
        
        ini_infect = set(initial)
        all_visited = set()
        subgraph_len = 0
        del_node = min(initial)
        for node in range(len(graph)):
            if node not in all_visited:
                visited = set([node])
                dfs(visited, node)        
                
                infect = visited & ini_infect
                if len(infect) == 1:
                    if len(visited) > subgraph_len or (len(visited) == subgraph_len and list(infect)[0] < del_node):
                        del_node = list(infect)[0] 
                        subgraph_len = len(visited)
                all_visited = all_visited | visited
        
        return del_node
        